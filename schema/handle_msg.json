{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "HandleMsg",
  "description": "Handle messages. For RNG users, the three of these matter. `callback_rn`: generates a random number in a single transaction. `create_rn` and `fulfill_rn`: functions required for the two-transaction RNG.",
  "anyOf": [
    {
      "type": "object",
      "required": [
        "configure_fwd"
      ],
      "properties": {
        "configure_fwd": {
          "type": "object",
          "required": [
            "forw_entropy",
            "forw_entropy_to_addr",
            "forw_entropy_to_hash"
          ],
          "properties": {
            "forw_entropy": {
              "type": "boolean"
            },
            "forw_entropy_to_addr": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "forw_entropy_to_hash": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    {
      "type": "object",
      "required": [
        "configure_auth"
      ],
      "properties": {
        "configure_auth": {
          "type": "object",
          "required": [
            "add"
          ],
          "properties": {
            "add": {
              "type": "string"
            }
          }
        }
      }
    },
    {
      "type": "object",
      "required": [
        "configure_stats"
      ],
      "properties": {
        "configure_stats": {
          "type": "object",
          "required": [
            "view"
          ],
          "properties": {
            "view": {
              "type": "boolean"
            }
          }
        }
      }
    },
    {
      "type": "object",
      "required": [
        "add_admin"
      ],
      "properties": {
        "add_admin": {
          "type": "object",
          "required": [
            "add"
          ],
          "properties": {
            "add": {
              "type": "string"
            }
          }
        }
      }
    },
    {
      "type": "object",
      "required": [
        "remove_admin"
      ],
      "properties": {
        "remove_admin": {
          "type": "object",
          "required": [
            "remove"
          ],
          "properties": {
            "remove": {
              "type": "string"
            }
          }
        }
      }
    },
    {
      "type": "object",
      "required": [
        "donate_entropy"
      ],
      "properties": {
        "donate_entropy": {
          "type": "object",
          "required": [
            "entropy"
          ],
          "properties": {
            "entropy": {
              "type": "string"
            }
          }
        }
      }
    },
    {
      "type": "object",
      "required": [
        "request_rn"
      ],
      "properties": {
        "request_rn": {
          "type": "object",
          "required": [
            "entropy"
          ],
          "properties": {
            "entropy": {
              "type": "string"
            }
          }
        }
      }
    },
    {
      "type": "object",
      "required": [
        "callback_rn"
      ],
      "properties": {
        "callback_rn": {
          "type": "object",
          "required": [
            "callback_code_hash",
            "cb_msg",
            "contract_addr",
            "entropy"
          ],
          "properties": {
            "callback_code_hash": {
              "type": "string"
            },
            "cb_msg": {
              "$ref": "#/definitions/Binary"
            },
            "contract_addr": {
              "type": "string"
            },
            "entropy": {
              "type": "string"
            }
          }
        }
      }
    },
    {
      "type": "object",
      "required": [
        "create_rn"
      ],
      "properties": {
        "create_rn": {
          "type": "object",
          "required": [
            "cb_msg",
            "entropy",
            "receiver_code_hash"
          ],
          "properties": {
            "cb_msg": {
              "$ref": "#/definitions/Binary"
            },
            "entropy": {
              "type": "string"
            },
            "max_blk_delay": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint64",
              "minimum": 0.0
            },
            "purpose": {
              "type": [
                "string",
                "null"
              ]
            },
            "receiver_addr": {
              "type": [
                "string",
                "null"
              ]
            },
            "receiver_code_hash": {
              "type": "string"
            }
          }
        }
      }
    },
    {
      "type": "object",
      "required": [
        "fulfill_rn"
      ],
      "properties": {
        "fulfill_rn": {
          "type": "object",
          "required": [
            "creator_addr",
            "receiver_code_hash"
          ],
          "properties": {
            "creator_addr": {
              "type": "string"
            },
            "purpose": {
              "type": [
                "string",
                "null"
              ]
            },
            "receiver_code_hash": {
              "type": "string"
            }
          }
        }
      }
    },
    {
      "type": "object",
      "required": [
        "receive_rn"
      ],
      "properties": {
        "receive_rn": {
          "type": "object",
          "required": [
            "cb_msg",
            "rn"
          ],
          "properties": {
            "cb_msg": {
              "$ref": "#/definitions/Binary"
            },
            "rn": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "uint8",
                "minimum": 0.0
              },
              "maxItems": 32,
              "minItems": 32
            }
          }
        }
      }
    },
    {
      "type": "object",
      "required": [
        "generate_viewing_key"
      ],
      "properties": {
        "generate_viewing_key": {
          "type": "object",
          "required": [
            "entropy",
            "receiver_code_hash"
          ],
          "properties": {
            "entropy": {
              "type": "string"
            },
            "padding": {
              "type": [
                "string",
                "null"
              ]
            },
            "receiver_code_hash": {
              "type": "string"
            }
          }
        }
      }
    }
  ],
  "definitions": {
    "Binary": {
      "description": "Binary is a wrapper around Vec<u8> to add base64 de/serialization with serde. It also adds some helper methods to help encode inline.\n\nThis is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>",
      "type": "string"
    }
  }
}
